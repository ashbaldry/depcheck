% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/shiny_check.R
\name{checkShinyDependencyUse}
\alias{checkShinyDependencyUse}
\title{Check Shiny Application Dependencies}
\usage{
checkShinyDependencyUse(path = ".", r_scripts_dir = "R", verbose = TRUE)
}
\arguments{
\item{path}{Path to the application root directory}

\item{r_scripts_dir}{Subdirectories in the shiny application that contain R scripts, write as relative paths to
\code{path}. Default is set to \code{R}}

\item{verbose}{Logical, should informative messages be printed during the dependency evaluation?}
}
\value{
An object of class \code{multi_package_usage}, a named list of the dependencies used, each containing a
\code{data.frame} of all the functions within the package and how often they are used within the project.

The result will flag any packages that have been rarely used in the project.
}
\description{
`checkShinyDependencyUse()` checks the global.R and app.R (or ui.R and server.R) scripts within a project, and
any specified directory within the project,  for package calling through the use of
\code{library}, \code{require} and \code{requireNamespace}. It also finds packages explicitly used via
the \code{pkg::function} notation.

Using these packages, it then checks the same R scripts to check for function use of each package.
}
\examples{
\dontrun{
dependency_use <- checkShinyDependencyUse()
summary(dependency_use)
}

}
\seealso{
\code{\link{checkProjectDependencyUse}}, \code{\link{checkPackageDependencyUse}}
}
